global
    # Global settings
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 4000
    tune.ssl.default-dh-param 2048

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL/TLS connections
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http

# Frontend configuration
frontend http-in
    bind *:80
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    
    # Define the backend to use based on the domain
    use_backend backend_servers if { hdr(host) -i example.com } || { hdr(host) -i www.example.com }
    
    # Default backend if no match
    default_backend backend_servers

# Backend configuration
backend backend_servers
    balance roundrobin
    option httpchk GET /health
    
    # Example server configuration - replace with your actual servers
    server server1 192.168.1.10:80 check
    server server2 192.168.1.11:80 check

# Statistics page
frontend stats
   bind *:1936
   stats enable
   stats hide-version
   stats refresh 30s
   stats show-node
   stats auth admin:password
   stats uri /stats

# SSL termination example
frontend https-in
   bind *:443 ssl crt /etc/ssl/private/example.com.pem
   http-request set-header X-Forwarded-Proto https
   default_backend backend_servers
